@using Ecommerce.Models.DTOs
@using Ecommerce.ViewModel
@model BookDisplayModel

@{

}
<div class="my-2">
    <form asp-action="Index" method="get" class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12">
            <label class="visually-hidden" for="genreId">Genres</label>
            <select class="form-select" id="genreId" name="genreId">
                <option selected>Genre</option>
                @foreach (var genre in Model.Genres)
                {
                    <option selected="@(genre.Id == Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                }
            </select>
        </div>

        <div class="col-12">
            <label class="visually-hidden" for="sterm">Search by title</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Search by title">
            </div>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="/Home/Index" class="btn btn-dark">Reset</a>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap ">
   
    @foreach (var book in Model.Books)
    {
        <div class="card mx-3 mb-4" style="width: 11rem;">
            @if (string.IsNullOrEmpty(book.Image))
            {
                <img style="width:100%;height:180px" src="/images/NoImage.png" class="card-img-top" alt="...">

            }
            else
            {
                <img style="width:100%;height:180px" src="/images/@book.Image" class="card-img-top" alt="...">
            }
            <div class="card-body">
                <h5 class="card-title">@book.BookName</h5>
                <p class="card-text">
                    <b>Genre: </b>@book.GenreName <br />
                    <b>Author: </b>@book.AuthorName <br />
                    <b>Price: </b>@book.Price $
                     <br/> <b>@book.Quantity</b> 
                </p>
                @if (book.Quantity > 0)
                {
                    @* <form action="/Cart/AddItem?bookId=@book.Id" method="post"> *@
                    @*     <button type="submit">Add to Cart</button> *@
                    @* </form> *@
                    <form onsubmit="handleAddToCart(event, '@book.Id')">
                        <button type="submit">Add to Cart</button>
                    </form>
                   
				}
                else
                {
                    <span style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Out of stock</span>
                }
            </div>
        </div>
    }
</div>
<div id="cartNotification" class="notification">
    Item added to cart!
</div>

<style>
    /* Notification styling */
    .notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        opacity: 0;
        transform: translateY(-20px);
        transition: opacity 0.5s ease, transform 0.5s ease;
        visibility: hidden;
    }

        .notification.show {
            opacity: 1;
            transform: translateY(0);
            visibility: visible;
        }
</style>

@section Scripts{
    <script>

                function handleAddToCart(event, bookId) {
            add(bookId);// First function
            addToCart(event, bookId);  //Second function
        }
                    async function addToCart(event, bookId) {
            event.preventDefault(); // Prevents the page from redirecting

            fetch(`/Cart/AddItem?bookId=${bookId}`, {
                method: "POST"
            })
            .then(response => response.json()) // Convert response to JSON
            .then(data => {
                console.log("Response:", data);
                showNotification(); // Show confirmation (optional)
            })
            .catch(error => console.error("Error:", error));
        }
        ////
                function showNotification() {
            let notification = document.getElementById("cartNotification");
            notification.classList.add("show");

            setTimeout(() => {
                notification.classList.remove("show");
            }, 3000); // Hide after 3 seconds
        }


        // let bookId = button.getAttribute("data-bookid");
        //////
        async function add(bookId) {
             var usernameEl = document.getElementById("username");
        if(usernameEl == null){
            window.location.href = "/Identity/Account/Login";
            return;
            ///////
          //var username=usernameEl.innerText;
          //  if(username.length<1){
          //      window.location.href="/Identity/Account/Login";
          //  }
        }
        //     try {
        //     let response = await fetch(`/Cart/AddItem`, {
        //         method: "POST", Change to POST
        //         headers: {
        //             "Content-Type": "application/json",
        //         },
        //         body: JSON.stringify({ bookId: bookId }), Send bookId in the request body
        //     });

        //     if (!response.ok) {
        //         throw new Error(`HTTP error! Status: ${response.status}`);
        //     }

        //     let result = await response.json();
        //     let cartCountEl = document.getElementById("cartCount");

        //     if (cartCountEl) {
        //         cartCountEl.innerHTML = result;
        //     }

        //     window.location.href = "#cartCount";
        // }
        // catch (err) {
        //     console.error("Error adding item to cart:", err);
        // }
            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>
}


